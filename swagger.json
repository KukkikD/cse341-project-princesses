{
  "swagger": "2.0",
  "info": {
    "title": "Princesses API",
    "description": "API documentation for the Princess project",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/princess/": {
      "get": {
        "summary": "Get all princesses",
        "description": "Retrieve a list of all princesses",
        "responses": {
          "200": {
            "description": "List of princesses retrieved successfully"
          }
        }
      },
      "post": {
        "summary": "Create a new princess",
        "description": "Add a new princess to the collection",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Rapunzel"
                },
                "kingdom": {
                  "type": "string",
                  "example": "Corona"
                },
                "age": {
                  "type": "integer",
                  "example": 18
                },
                "power": {
                  "type": "string",
                  "example": "Healing hair"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Princess created successfully"
          },
          "500": {
            "description": "Failed to create Princess"
          }
        }
      }
    },
    "/princess/{id}": {
      "get": {
        "summary": "Get a princess by ID",
        "description": "Retrieve detailed information about a specific princess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Princess details retrieved successfully"
          },
          "404": {
            "description": "Princess not found"
          }
        }
      },
      "put": {
        "summary": "Update a princess by ID",
        "description": "Modify the details of an existing princess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Rapunzel"
                },
                "kingdom": {
                  "type": "string",
                  "example": "Corona"
                },
                "age": {
                  "type": "integer",
                  "example": 19
                },
                "power": {
                  "type": "string",
                  "example": "Healing hair"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Princess updated successfully"
          },
          "404": {
            "description": "Princess not found"
          },
          "500": {
            "description": "Failed to update Princess"
          }
        }
      },
      "delete": {
        "summary": "Delete a princess by ID",
        "description": "Remove a princess from the database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "description": "Princess not found"
          }
        }
      }
    }
  }
}
